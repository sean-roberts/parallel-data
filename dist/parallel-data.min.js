// ParallelData v1.0.0 by Sean Roberts @DevelopSean
!function(){"use strict";var e="ParallelData";function t(){try{for(var t,n=arguments.length,r=Array(n),s=0;s<n;s++)r[s]=arguments[s];(t=console).error.apply(t,[e].concat(r))}catch(e){}}var n={},r={},s={},a=function(e,t){return e.toUpperCase()+"-"+t},i=function(e,t,r,i){var _=a(e,t);if(!n[_]){var o=new XMLHttpRequest,c=n[_]={url:t,method:e,headers:r,xhrRef:o,events:{load:null,error:null,timeout:null}};o.__PDInternal__=!0,o.open(e,t),r=Object.assign({},s.headers,r||{}),Object.keys(r).forEach(function(e){o.setRequestHeader(e,r[e])}),Object.keys(c.events).forEach(function(e){o.addEventListener(e,function(t){c.events[e]=t})}),o.send()}},_=function(e,n,i){var _=a(e,n);r[_]||(r[_]=fetch(n,Object.assign({},i,{__PDFetch__:!0,method:e,headers:Object.assign({},s.headers,i.headers||{}),credentials:i.credentials||"include",redirect:i.redirect||"follow"})).catch(function(e){throw t("fetch request failed",e),e}))};function o(e,n){n=n||{};try{i("GET",e,n.headers)}catch(e){t("makeXHRRequest failed",e)}}!function(){try{var e=XMLHttpRequest.prototype;e.__PDListeners__=[],Object.keys(e).forEach(function(t){var n=Object.getOwnPropertyDescriptor(e,t);void 0===n.value&&Object.defineProperty(e,t,Object.assign({},n,{get:function(){return!this.__PDInternal__&&this.__PDRequest__?this.__PDRequest__[t]:n.get.call(this)}}))});var n=e.open;e.open=function(e,t){this.__PDOpen__={method:e,url:t},n.apply(this,arguments)};var r=e.addEventListener;e.addEventListener=function(){if(!this.__PDInternal__){if(this.__PDRequest__)return this.__PDRequest__.addEventListener.apply(this.__PDRequest__,arguments);this.__PDListeners__.push({action:"add",args:arguments})}return r.apply(this,arguments)};var s=e.removeEventListener;e.removeEventListener=function(){if(!this.__PDInternal__){if(this.__PDRequest__)return this.__PDRequest__.removeEventListener.apply(this.__PDRequest__,arguments);this.__PDListeners__.push({action:"remove",args:arguments})}return s.apply(this,arguments)};var a=e.send;e.send=function(e){var n=this,r=window.ParallelData.getRequestReference(this.__PDOpen__,"xhr"),s=r&&r.xhrRef;this.__PDInternal__||!s||s.__PDConsumed__?(this.__PDListeners__=[],a.call(this,e)):(s.__PDConsumed__=!0,(window.setImmediate||window.setTimeout)(function(){try{for(s.onreadystatechange=n.onreadystatechange,Object.keys(XMLHttpRequestEventTarget.prototype).forEach(function(e){s[e]=n[e]});n.__PDListeners__.length;){var e=n.__PDListeners__.shift();s[e.action+"EventListener"].apply(s,e.args)}n.__PDRequest__=s,s.onreadystatechange&&s.onreadystatechange(),Object.keys(r.events).forEach(function(e){r.events[e]&&n.dispatchEvent(r.events[e])})}catch(e){t("transferring events failed",e)}},0))}}catch(e){t("failed to run XHRInterceptor",e)}}(),function(){try{var e=window.fetch;if(!e||!window.Promise)return;window.fetch=function(t,n){t=t||{},n=n||{};var r=void 0,s=void 0;"string"==typeof t?r=t:t.url&&(r=t.url),s=t.method?t.method:n.method?n.method:"GET";var a=window.ParallelData.getRequestReference({method:s,url:r},"fetch");return!n.__PDFetch__&&a?a:e.apply(window,arguments)}}catch(e){t("failed to run fetchInterceptor",e)}}(),window.ParallelData={version:"1.0.0",getForXHR:o,getForFetch:function(e,n){n=n||{};try{"fetch"in window&&"Promise"in window?_("GET",e,n):o(e,n)}catch(e){t("makeXHRRequest failed",e)}},getRequestReference:function(e,t){if(e&&e.method&&e.url){var s=a(e.method,e.url);return"xhr"===t?n[s]:r[s]}},configure:function(e){var t;(e=e||{}).allRequests&&(t=e.allRequests,s=Object.assign({},s,t||{}))}}}();
