// ParallelData v1.0.0 by Sean Roberts @DevelopSean
!function(){"use strict";var e="ParallelData";function t(){try{for(var t,n=arguments.length,r=Array(n),s=0;s<n;s++)r[s]=arguments[s];(t=console).error.apply(t,[e].concat(r))}catch(e){}}var n={},r=function(e,t){return e.toUpperCase()+"-"+t},s=function(e,t,s,_){var a=r(e,t);if(!n[a]){var i=new XMLHttpRequest,o=n[a]={url:t,method:e,headers:s,xhrRef:i,events:{load:null,error:null,timeout:null}};i.__PDInternal__=!0,i.open(e,t),Object.keys(s||{}).forEach(function(e){i.setRequestHeader(e,s[e])}),Object.keys(o.events).forEach(function(e){i.addEventListener(e,function(t){o.events[e]=t})}),i.send()}};!function(){try{var e=XMLHttpRequest.prototype;e.__PDListeners__=[],Object.keys(e).forEach(function(t){var n=Object.getOwnPropertyDescriptor(e,t);void 0===n.value&&Object.defineProperty(e,t,Object.assign({},n,{get:function(){return!this.__PDInternal__&&this.__PDRequest__?this.__PDRequest__[t]:n.get.call(this)}}))});var n=e.open;e.open=function(e,t){this.__PDOpen__={method:e,url:t},n.apply(this,arguments)};var r=e.addEventListener;e.addEventListener=function(){if(!this.__PDInternal__){if(this.__PDRequest__)return this.__PDRequest__.addEventListener.apply(this.__PDRequest__,arguments);this.__PDListeners__.push({action:"add",args:arguments})}return r.apply(this,arguments)};var s=e.removeEventListener;e.removeEventListener=function(){if(!this.__PDInternal__){if(this.__PDRequest__)return this.__PDRequest__.removeEventListener.apply(this.__PDRequest__,arguments);this.__PDListeners__.push({action:"remove",args:arguments})}return s.apply(this,arguments)};var _=e.send;e.send=function(e){var n=this,r=window.ParallelData.getRequestReference(this.__PDOpen__),s=r&&r.xhrRef;this.__PDInternal__||!s||s.__PDConsumed__?(this.__PDListeners__=[],_.call(this,e)):(s.__PDConsumed__=!0,(window.setImmediate||window.setTimeout)(function(){try{for(s.onreadystatechange=n.onreadystatechange,Object.keys(XMLHttpRequestEventTarget.prototype).forEach(function(e){s[e]=n[e]});n.__PDListeners__.length;){var e=n.__PDListeners__.shift();s[e.action+"EventListener"].apply(s,e.args)}n.__PDRequest__=s,s.onreadystatechange&&s.onreadystatechange(),Object.keys(r.events).forEach(function(e){r.events[e]&&n.dispatchEvent(r.events[e])})}catch(e){t("transferring events failed",e)}},0))}}catch(e){t("failed to run attachInterceptor",e)}}(),window.ParallelData={version:"1.0.0",get:function(e,n){n=n||{};try{s("GET",e,n.headers)}catch(e){t("could not makeRequest",e)}},getRequestReference:function(e){var t=r(e.method,e.url);return n[t]}}}();
